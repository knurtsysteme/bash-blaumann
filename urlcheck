#!/bin/bash

# MIT License
# Copyright (C) 2012 KNURT Systeme
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# @since 07/30/2012

PROGNAME=`basename $0` # get called program
USAGE="usage: $PROGNAME [-h | OPTIONS] <URL>"
VERSION="0.0.1"

function printusage() {
  echo $USAGE
}

function printhelp() {
  cat << EOF
$PROGNAME version $VERSION 
Validate the response of a given url

(c) 2012 by KNURT Systeme
Released without warranty under the terms of the MIT license.

$USAGE

OPTIONS:
  -c <httpcode>     Assert that response has given httpcode header
  -h                Print help
  -H <header>       (HTTP) Extra header to use when getting a web page. 
                    Same as -H parameter on man curl.
  -p <file>         Send the request via POST using the given file as data
  -t <contenttype>  Assert that response has given content-type header

Examples:
  Check regular response (http-code is 200) of http://google.com
    $PROGNAME -c 200 http://google.com
  Check 404 for http://google.com
    $PROGNAME -c 404 http://google.com/no/service/here
  Check 404 and content-type is application/json of http://google.com
    $PROGNAME -c 404 -t "application/json" http://google.com/no/service/here
  Check 404 on posting data
    $PROGNAME -c 404 -p "/path/to/file/to/post.data" http://google.com/no/service/here
EOF
}

function checkGivenParams() {
  if test $# -lt 1 -o `expr $# % 2` -ne 1; then
    printusage
    exit 1
  fi
  if test $# -eq 1 -a "$1" != "-h"; then
    printusage
    exit 2
  fi
}

function checkGetHttpCode() {
  CHECK=`curl -sL -w "%{http_code}" -H "$HEADER" $URL -o /dev/null`
  if test $CHECK == $HTTP_CODE; then
    echo OK get $URL http-code is $HTTP_CODE
  else
    echo FAIL get $URL http-code is $CHECK not $HTTP_CODE
    EXIT_STATUS=1207311224
  fi
}

function checkGetContentType() {
  CHECK=`curl -sL -w "%{content_type}" -H "$HEADER" $URL -o /dev/null`
  if test "$CHECK" == "$CONTENT_TYPE"; then
    echo OK get $URL content-type is $CONTENT_TYPE
  else
    echo FAIL get $URL content-type is $CHECK not $CONTENT_TYPE
    EXIT_STATUS=1207311223
  fi
}

function checkPostHttpCode() {
  CHECK=`curl -sL -w "%{http_code}" -X POST -H "$HEADER" -d @$POST_FILE $URL -o /dev/null`;
  if test "$CHECK" == "$HTTP_CODE"; then
    echo OK post $URL http-code is $HTTP_CODE
  else
    echo FAIL post $URL http-code is $CHECK not $HTTP_CODE
    EXIT_STATUS=1207311222
  fi
}

function checkPostContentType() {
  CHECK=`curl -sL -w "%{content_type}" -X POST -H "$HEADER" -d @$POST_FILE $URL -o /dev/null`;
  if test "$CHECK" == "$CONTENT_TYPE"; then
    echo OK post $URL content-type is $CONTENT_TYPE
  else
    echo FAIL post $URL content-type is $CHECK not $CONTENT_TYPE
    EXIT_STATUS=1207311221
  fi
}

function setParams() {
  URL="${@: -1}"
  EXIT_STATUS=0
  HEADER=""
  IS_GET=1
  HTTP_CODE=200
  CHECK_HTTP_CODE=0
  CONTENT_TYPE="text/html"
  CHECK_CONTENT_TYPE=0
  PRINTHELP=0
  POST_FILE=0
  while getopts "hc:t:p:H:" OPT; do
    case $OPT in
      h)
        PRINTHELP=1
        ;;
      H)
        HEADER=$OPTARG
        ;;
      p)
        if test -r "$OPTARG"; then
          POST_FILE=$OPTARG
          IS_GET=0
        else
          echo "ERROR: File $OPTARG not readable" >&2
          exit 1207311051
        fi
        ;;
      c)
        if test "$OPTARG" != ""; then
          HTTP_CODE=$OPTARG
        fi
        CHECK_HTTP_CODE=1
        ;;
      t)
        if test "$OPTARG" != ""; then
          CONTENT_TYPE=$OPTARG
        fi
        CHECK_CONTENT_TYPE=1
        ;;
      \\?)
        printusage
        exit 1207311145
        ;;
    esac
  done
}


checkGivenParams "$@"
setParams "$@"

if test $PRINTHELP == 1; then
  printhelp
  exit 0
fi

if test $CHECK_HTTP_CODE == 1; then
  if test $IS_GET == 1; then
    checkGetHttpCode
  else
    checkPostHttpCode
  fi
fi

if test $CHECK_CONTENT_TYPE == 1; then
  if test $IS_GET == 1; then
    checkGetContentType
  else
    checkPostContentType
  fi
fi

exit $EXIT_STATUS
